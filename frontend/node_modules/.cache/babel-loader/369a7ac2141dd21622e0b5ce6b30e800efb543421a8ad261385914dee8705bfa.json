{"ast":null,"code":"var _jsxFileName = \"C:\\\\projet partager\\\\transit-master\\\\frontend\\\\src\\\\components\\\\Files.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2'; // Importer SweetAlert2\nimport './Files.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = () => {\n  _s();\n  const [dossierId, setDossierId] = useState(null); // Stocker l'ID du dossier localement\n  const [packingList, setPackingList] = useState(null);\n  const [invoice, setInvoice] = useState(null);\n  const [ltaBl, setLtaBl] = useState(null);\n  useEffect(() => {\n    // Récupérer l'ID du dossier depuis le stockage local du navigateur (localStorage)\n    const storedDossierId = localStorage.getItem('dossierId');\n    if (storedDossierId) {\n      setDossierId(storedDossierId);\n    }\n  }, []); // Effectuer cette opération une seule fois au chargement du composant\n\n  const handleFileChange = (event, setFile) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setFile({\n        name: file.name,\n        type: file.type,\n        content: reader.result.split(',')[1] // Extraire la base64 uniquement\n      });\n    };\n    reader.readAsDataURL(file); // Lire le fichier en tant que base64\n  };\n  const getFilePreview = file => {\n    if (!file) return null;\n    const fileType = getFileType(file.name);\n    switch (fileType) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/pdf-icon.png\",\n          alt: \"PDF\",\n          className: \"file-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(new Blob([file.content], {\n            type: file.type\n          })),\n          alt: \"Image\",\n          className: \"file-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-preview\",\n          children: \"Preview not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getFileType = fileName => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return 'pdf';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n        return 'image';\n      default:\n        return 'unknown';\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Traitement et envoi du premier fichier\n      if (packingList) {\n        await uploadFile(packingList);\n      }\n\n      // Traitement et envoi du deuxième fichier\n      if (invoice) {\n        await uploadFile(invoice);\n      }\n\n      // Traitement et envoi du troisième fichier\n      if (ltaBl) {\n        await uploadFile(ltaBl);\n      }\n\n      // Afficher une alerte de confirmation si tous les fichiers ont été envoyés avec succès\n      Swal.fire({\n        title: 'Succès!',\n        text: `Les fichiers du dossier ${dossierId} ont été sauvegardés.`,\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      // Afficher une alerte d'erreur si une erreur survient lors de l'envoi des fichiers\n      Swal.fire({\n        title: 'Erreur!',\n        text: 'Une erreur est survenue lors de la sauvegarde des fichiers.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n\n  // Fonction pour télécharger et envoyer un fichier à l'API\n  const uploadFile = async file => {\n    try {\n      console.log('Uploading file:', file);\n      const formData = new FormData();\n      formData.append('nom_fichier', file.name);\n      formData.append('type_fichier', file.type); // Utiliser file.type pour le type de fichier\n      formData.append('id_dossier', dossierId);\n      formData.append('content', file.content); // Ajouter le contenu du fichier en base64\n\n      const response = await fetch('http://localhost:8000/api/fichiers', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to upload file: ${errorText}`);\n      }\n      const result = await response.json();\n      console.log('File uploaded successfully:', result);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; // Relancer l'erreur pour que la fonction appelante puisse la gérer\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"files-title\",\n        children: [\"Charger des fichiers pour le dossier \", dossierId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"files-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"field-title\",\n            children: \"Packing List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleFileChange(e, setPackingList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), getFilePreview(packingList)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"field-title\",\n            children: \"Facture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleFileChange(e, setInvoice)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), getFilePreview(invoice)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"field-title\",\n            children: \"LTA/BL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleFileChange(e, setLtaBl)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), getFilePreview(ltaBl)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Files, \"34hjVcUsxV1aMUa19HyqOCZYbac=\");\n_c = Files;\nexport default Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["React","useState","useEffect","Swal","jsxDEV","_jsxDEV","Files","_s","dossierId","setDossierId","packingList","setPackingList","invoice","setInvoice","ltaBl","setLtaBl","storedDossierId","localStorage","getItem","handleFileChange","event","setFile","file","target","files","reader","FileReader","onload","name","type","content","result","split","readAsDataURL","getFilePreview","fileType","getFileType","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","URL","createObjectURL","Blob","children","extension","pop","handleSubmit","preventDefault","uploadFile","fire","title","text","icon","confirmButtonText","error","console","log","formData","FormData","append","response","fetch","method","body","ok","errorText","Error","json","onSubmit","onChange","e","_c","$RefreshReg$"],"sources":["C:/projet partager/transit-master/frontend/src/components/Files.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2'; // Importer SweetAlert2\r\nimport './Files.css';\r\n\r\nconst Files = () => {\r\n  const [dossierId, setDossierId] = useState(null); // Stocker l'ID du dossier localement\r\n  const [packingList, setPackingList] = useState(null);\r\n  const [invoice, setInvoice] = useState(null);\r\n  const [ltaBl, setLtaBl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Récupérer l'ID du dossier depuis le stockage local du navigateur (localStorage)\r\n    const storedDossierId = localStorage.getItem('dossierId');\r\n    if (storedDossierId) {\r\n      setDossierId(storedDossierId);\r\n    }\r\n  }, []); // Effectuer cette opération une seule fois au chargement du composant\r\n\r\n  const handleFileChange = (event, setFile) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = () => {\r\n      setFile({\r\n        name: file.name,\r\n        type: file.type,\r\n        content: reader.result.split(',')[1] // Extraire la base64 uniquement\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file); // Lire le fichier en tant que base64\r\n  };\r\n\r\n  const getFilePreview = (file) => {\r\n    if (!file) return null;\r\n\r\n    const fileType = getFileType(file.name);\r\n    switch (fileType) {\r\n      case 'pdf':\r\n        return <img src=\"/pdf-icon.png\" alt=\"PDF\" className=\"file-preview\" />;\r\n      case 'image':\r\n        return <img src={URL.createObjectURL(new Blob([file.content], { type: file.type }))} alt=\"Image\" className=\"file-preview\" />;\r\n      default:\r\n        return <span className=\"file-preview\">Preview not available</span>;\r\n    }\r\n  };\r\n\r\n  const getFileType = (fileName) => {\r\n    const extension = fileName.split('.').pop();\r\n    switch (extension) {\r\n      case 'pdf':\r\n        return 'pdf';\r\n      case 'png':\r\n      case 'jpg':\r\n      case 'jpeg':\r\n        return 'image';\r\n      default:\r\n        return 'unknown';\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      // Traitement et envoi du premier fichier\r\n      if (packingList) {\r\n        await uploadFile(packingList);\r\n      }\r\n\r\n      // Traitement et envoi du deuxième fichier\r\n      if (invoice) {\r\n        await uploadFile(invoice);\r\n      }\r\n\r\n      // Traitement et envoi du troisième fichier\r\n      if (ltaBl) {\r\n        await uploadFile(ltaBl);\r\n      }\r\n\r\n      // Afficher une alerte de confirmation si tous les fichiers ont été envoyés avec succès\r\n      Swal.fire({\r\n        title: 'Succès!',\r\n        text: `Les fichiers du dossier ${dossierId} ont été sauvegardés.`,\r\n        icon: 'success',\r\n        confirmButtonText: 'OK',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n      // Afficher une alerte d'erreur si une erreur survient lors de l'envoi des fichiers\r\n      Swal.fire({\r\n        title: 'Erreur!',\r\n        text: 'Une erreur est survenue lors de la sauvegarde des fichiers.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Fonction pour télécharger et envoyer un fichier à l'API\r\n  const uploadFile = async (file) => {\r\n    try {\r\n      console.log('Uploading file:', file);\r\n      const formData = new FormData();\r\n      formData.append('nom_fichier', file.name);\r\n      formData.append('type_fichier', file.type); // Utiliser file.type pour le type de fichier\r\n      formData.append('id_dossier', dossierId);\r\n      formData.append('content', file.content); // Ajouter le contenu du fichier en base64\r\n\r\n      const response = await fetch('http://localhost:8000/api/fichiers', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to upload file: ${errorText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('File uploaded successfully:', result);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      throw error; // Relancer l'erreur pour que la fonction appelante puisse la gérer\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"files-container\">\r\n      <div className=\"files-paper\">\r\n        <h5 className=\"files-title\">Charger des fichiers pour le dossier {dossierId}</h5>\r\n        <form onSubmit={handleSubmit} className=\"files-form\">\r\n          <div className=\"files-field\">\r\n            <label className=\"field-title\">Packing List</label>\r\n            <div className=\"file-container\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => handleFileChange(e, setPackingList)}\r\n              />\r\n              {getFilePreview(packingList)}\r\n            </div>\r\n          </div>\r\n          <div className=\"files-field\">\r\n            <label className=\"field-title\">Facture</label>\r\n            <div className=\"file-container\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => handleFileChange(e, setInvoice)}\r\n              />\r\n              {getFilePreview(invoice)}\r\n            </div>\r\n          </div>\r\n          <div className=\"files-field\">\r\n            <label className=\"field-title\">LTA/BL</label>\r\n            <div className=\"file-container\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => handleFileChange(e, setLtaBl)}\r\n              />\r\n              {getFilePreview(ltaBl)}\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-button\">Enregistrer</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}