{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\transit-master-webapp\\\\src\\\\ProfileDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport './ProfileDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileDropdown = () => {\n  _s();\n  const [isOpen, setOpen] = useState(false);\n  const [items, setItems] = useState([{\n    id: 0,\n    label: \"Istanbul, TR (AHL)\"\n  }, {\n    id: 1,\n    label: \"Paris, FR (CDG)\"\n  }]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const toggleDropdown = () => setOpen(!isOpen);\n  const handleItemClick = id => {\n    setSelectedItem(id === selectedItem ? null : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      onClick: toggleDropdown,\n      children: [selectedItem ? items.find(item => item.id === selectedItem).label : \"Select your destination\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fa fa-chevron-right icon ${isOpen && \"open\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-body ${isOpen && \"open\"}`,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-item\",\n        onClick: () => handleItemClick(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dropdown-item-dot ${item.id === selectedItem && \"selected\"}`,\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), item.label]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(ProfileDropdown, \"VfKUwE2p2pEww5YaLKwL/OZNuXo=\");\n_c = ProfileDropdown;\nexport default ProfileDropdown;\nvar _c;\n$RefreshReg$(_c, \"ProfileDropdown\");","map":{"version":3,"names":["React","useState","PropTypes","ReactDOM","jsxDEV","_jsxDEV","ProfileDropdown","_s","isOpen","setOpen","items","setItems","id","label","selectedItem","setSelectedItem","toggleDropdown","handleItemClick","className","children","onClick","find","item","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/wamp64/www/transit-master-webapp/src/ProfileDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport './ProfileDropdown.css';\r\n\r\nconst ProfileDropdown = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [items, setItems] = useState([\r\n      { id: 0, label: \"Istanbul, TR (AHL)\" },\r\n      { id: 1, label: \"Paris, FR (CDG)\" }\r\n    ]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n  \r\n    const toggleDropdown = () => setOpen(!isOpen);\r\n  \r\n    const handleItemClick = (id) => {\r\n      setSelectedItem(id === selectedItem ? null : id);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n          {selectedItem ? items.find(item => item.id === selectedItem).label : \"Select your destination\"}\r\n          <i className={`fa fa-chevron-right icon ${isOpen && \"open\"}`}></i>\r\n        </div>\r\n        <div className={`dropdown-body ${isOpen && \"open\"}`}>\r\n          {items.map(item => (\r\n            <div key={item.id} className=\"dropdown-item\" onClick={() => handleItemClick(item.id)}>\r\n              <span className={`dropdown-item-dot ${item.id === selectedItem && \"selected\"}`}>â€¢</span>\r\n              {item.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ProfileDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CACjC;IAAEW,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAqB,CAAC,EACtC;IAAED,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAC,CACpC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMe,cAAc,GAAGA,CAAA,KAAMP,OAAO,CAAC,CAACD,MAAM,CAAC;EAE7C,MAAMS,eAAe,GAAIL,EAAE,IAAK;IAC9BG,eAAe,CAACH,EAAE,KAAKE,YAAY,GAAG,IAAI,GAAGF,EAAE,CAAC;EAClD,CAAC;EAED,oBACEP,OAAA;IAAKa,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBd,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAEJ,cAAe;MAAAG,QAAA,GACtDL,YAAY,GAAGJ,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKE,YAAY,CAAC,CAACD,KAAK,GAAG,yBAAyB,eAC9FR,OAAA;QAAGa,SAAS,EAAE,4BAA4BV,MAAM,IAAI,MAAM;MAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACNrB,OAAA;MAAKa,SAAS,EAAE,iBAAiBV,MAAM,IAAI,MAAM,EAAG;MAAAW,QAAA,EACjDT,KAAK,CAACiB,GAAG,CAACL,IAAI,iBACbjB,OAAA;QAAmBa,SAAS,EAAC,eAAe;QAACE,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAACK,IAAI,CAACV,EAAE,CAAE;QAAAO,QAAA,gBACnFd,OAAA;UAAMa,SAAS,EAAE,qBAAqBI,IAAI,CAACV,EAAE,KAAKE,YAAY,IAAI,UAAU,EAAG;UAAAK,QAAA,EAAC;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACvFJ,IAAI,CAACT,KAAK;MAAA,GAFHS,IAAI,CAACV,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA9BED,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}