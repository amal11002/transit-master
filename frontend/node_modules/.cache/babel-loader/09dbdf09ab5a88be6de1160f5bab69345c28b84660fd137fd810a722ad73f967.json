{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\transit-master\\\\frontend\\\\src\\\\components\\\\Files.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport './Files.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Files = () => {\n  _s();\n  const [dossierId, setDossierId] = useState(null); // Stocker l'ID du dossier localement\n  const [packingList, setPackingList] = useState(null);\n  const [invoice, setInvoice] = useState(null);\n  const [ltaBl, setLtaBl] = useState(null);\n  useEffect(() => {\n    // Récupérer l'ID du dossier depuis le stockage local du navigateur (localStorage)\n    const storedDossierId = localStorage.getItem('dossierId');\n    if (storedDossierId) {\n      setDossierId(storedDossierId);\n    }\n  }, []); // Effectuer cette opération une seule fois au chargement du composant\n\n  const handleFileChange = (event, setFile) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setFile({\n        name: file.name,\n        type: file.type,\n        content: reader.result.split(',')[1] // Extraire la base64 uniquement\n      });\n    };\n    reader.readAsDataURL(file); // Lire le fichier en tant que base64\n  };\n  const getFilePreview = file => {\n    if (!file) return null;\n    const fileType = getFileType(file.name);\n    switch (fileType) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/pdf-icon.png\",\n          alt: \"PDF\",\n          className: \"file-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(new Blob([file.content], {\n            type: file.type\n          })),\n          alt: \"Image\",\n          className: \"file-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-preview\",\n          children: \"Preview not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getFileType = fileName => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return 'pdf';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n        return 'image';\n      default:\n        return 'unknown';\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Traitement et envoi du premier fichier\n      if (packingList) {\n        await uploadFile(packingList);\n      }\n\n      // Traitement et envoi du deuxième fichier\n      if (invoice) {\n        await uploadFile(invoice);\n      }\n\n      // Traitement et envoi du troisième fichier\n      if (ltaBl) {\n        await uploadFile(ltaBl);\n      }\n\n      // Afficher une alerte de confirmation si tous les fichiers ont été envoyés avec succès\n      Swal.fire({\n        title: 'Succès!',\n        text: `Les fichiers du dossier ${dossierId} ont été sauvegardés.`,\n        icon: 'success',\n        confirmButtonText: 'OK'\n      });\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      // Afficher une alerte d'erreur si une erreur survient lors de l'envoi des fichiers\n      Swal.fire({\n        title: 'Erreur!',\n        text: 'Une erreur est survenue lors de la sauvegarde des fichiers.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n\n  // Fonction pour télécharger et envoyer un fichier à l'API\n  const uploadFile = async file => {\n    try {\n      console.log('Uploading file:', file);\n      const formData = new FormData();\n      formData.append('nom_fichier', file.name);\n      formData.append('type_fichier', file.type); // Utiliser file.type pour le type de fichier\n      formData.append('id_dossier', dossierId);\n      formData.append('content', file.content); // Ajouter le contenu du fichier en base64\n\n      const response = await fetch('http://localhost:8080/api/fichiers', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to upload file: ${errorText}`);\n      }\n      const result = await response.json();\n      console.log('File uploaded successfully:', result);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; // Relancer l'erreur pour que la fonction appelante puisse la gérer\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"files-title\",\n          children: [\"Charger des fichiers pour le dossier \", dossierId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"files-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"field-title\",\n              children: \"Packing List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 20\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(e, setPackingList)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this), getFilePreview(packingList)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\"    \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"field-title\",\n              children: \"Facture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 23\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(e, setInvoice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this), getFilePreview(invoice)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\"        \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"field-title\",\n              children: \"LTA/BL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 27\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(e, setLtaBl)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this), getFilePreview(ltaBl)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Files, \"34hjVcUsxV1aMUa19HyqOCZYbac=\");\n_c = Files;\nexport default Files;\nvar _c;\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"names":["React","useState","useEffect","Swal","jsxDEV","_jsxDEV","Files","_s","dossierId","setDossierId","packingList","setPackingList","invoice","setInvoice","ltaBl","setLtaBl","storedDossierId","localStorage","getItem","handleFileChange","event","setFile","file","target","files","reader","FileReader","onload","name","type","content","result","split","readAsDataURL","getFilePreview","fileType","getFileType","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","URL","createObjectURL","Blob","children","extension","pop","handleSubmit","preventDefault","uploadFile","fire","title","text","icon","confirmButtonText","error","console","log","formData","FormData","append","response","fetch","method","body","ok","errorText","Error","json","onSubmit","onChange","e","_c","$RefreshReg$"],"sources":["C:/wamp64/www/transit-master/frontend/src/components/Files.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport './Files.css';\n\nconst Files = () => {\n  const [dossierId, setDossierId] = useState(null); // Stocker l'ID du dossier localement\n  const [packingList, setPackingList] = useState(null);\n  const [invoice, setInvoice] = useState(null);\n  const [ltaBl, setLtaBl] = useState(null);\n\n  useEffect(() => {\n    // Récupérer l'ID du dossier depuis le stockage local du navigateur (localStorage)\n    const storedDossierId = localStorage.getItem('dossierId');\n    if (storedDossierId) {\n      setDossierId(storedDossierId);\n    }\n  }, []); // Effectuer cette opération une seule fois au chargement du composant\n\n  const handleFileChange = (event, setFile) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    \n    reader.onload = () => {\n      setFile({\n        name: file.name,\n        type: file.type,\n        content: reader.result.split(',')[1] // Extraire la base64 uniquement\n      });\n    };\n\n    reader.readAsDataURL(file); // Lire le fichier en tant que base64\n  };\n\n  const getFilePreview = (file) => {\n    if (!file) return null;\n\n    const fileType = getFileType(file.name);\n    switch (fileType) {\n      case 'pdf':\n        return <img src=\"/pdf-icon.png\" alt=\"PDF\" className=\"file-preview\" />;\n      case 'image':\n        return <img src={URL.createObjectURL(new Blob([file.content], { type: file.type }))} alt=\"Image\" className=\"file-preview\" />;\n      default:\n        return <span className=\"file-preview\">Preview not available</span>;\n    }\n  };\n\n  const getFileType = (fileName) => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return 'pdf';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n        return 'image';\n      default:\n        return 'unknown';\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // Traitement et envoi du premier fichier\n      if (packingList) {\n        await uploadFile(packingList);\n      }\n\n      // Traitement et envoi du deuxième fichier\n      if (invoice) {\n        await uploadFile(invoice);\n      }\n\n      // Traitement et envoi du troisième fichier\n      if (ltaBl) {\n        await uploadFile(ltaBl);\n      }\n\n      // Afficher une alerte de confirmation si tous les fichiers ont été envoyés avec succès\n      Swal.fire({\n        title: 'Succès!',\n        text: `Les fichiers du dossier ${dossierId} ont été sauvegardés.`,\n        icon: 'success',\n        confirmButtonText: 'OK',\n      });\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      // Afficher une alerte d'erreur si une erreur survient lors de l'envoi des fichiers\n      Swal.fire({\n        title: 'Erreur!',\n        text: 'Une erreur est survenue lors de la sauvegarde des fichiers.',\n        icon: 'error',\n        confirmButtonText: 'OK',\n      });\n    }\n  };\n\n  // Fonction pour télécharger et envoyer un fichier à l'API\n  const uploadFile = async (file) => {\n    try {\n      console.log('Uploading file:', file);\n      const formData = new FormData();\n      formData.append('nom_fichier', file.name);\n      formData.append('type_fichier', file.type); // Utiliser file.type pour le type de fichier\n      formData.append('id_dossier', dossierId);\n      formData.append('content', file.content); // Ajouter le contenu du fichier en base64\n\n      const response = await fetch('http://localhost:8080/api/fichiers', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to upload file: ${errorText}`);\n      }\n\n      const result = await response.json();\n      console.log('File uploaded successfully:', result);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error; // Relancer l'erreur pour que la fonction appelante puisse la gérer\n    }\n  };\n\n  return (\n    <div className=\"files-container\">\n      <div className=\"files-paper\">\n        <center>\n        <h2 className=\"files-title\">Charger des fichiers pour le dossier {dossierId}</h2> </center>\n        <hr></hr>\n        <form onSubmit={handleSubmit} className=\"files-form\">\n          <div className=\"files-field\">\n          <center> <h3 className=\"field-title\">Packing List</h3> </center>\n          <div className='class'>\n            <div className=\"file-container\">\n              <input type=\"file\" onChange={(e) => handleFileChange(e, setPackingList)} />\n              {getFilePreview(packingList)}\n            </div>\n          </div>\n          </div>\n          <div className=\"files-field\">\n          <center>    <h3 className=\"field-title\">Facture</h3> </center>\n\n          <div className='class'>\n            <div className=\"file-container\">\n              <input type=\"file\" onChange={(e) => handleFileChange(e, setInvoice)} />\n              {getFilePreview(invoice)}\n            </div>\n            </div>\n          </div>\n          <div className=\"files-field\">\n          <center>        <h3 className=\"field-title\">LTA/BL</h3> </center>\n\n          <div className='class'>\n            <div className=\"file-container\">\n              <input type=\"file\" onChange={(e) => handleFileChange(e, setLtaBl)} />\n              {getFilePreview(ltaBl)}\n            </div>\n            </div>\n          </div>\n          <center>\n          <button type=\"submit\" className=\"submit-button\">Enregistrer</button>\n\n          </center>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Files;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}